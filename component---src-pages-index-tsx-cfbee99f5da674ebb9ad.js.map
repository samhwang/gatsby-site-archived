{"version":3,"file":"component---src-pages-index-tsx-cfbee99f5da674ebb9ad.js","mappings":"0OAeA,EANwC,SAAC,GAAD,IAAGA,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAMC,EAAf,EAAeA,IAAf,OACtC,SAAC,IAAD,CAAcC,KAAMD,EAAKE,IAAQH,EAAL,QAA5B,UACE,cAAGI,UAAS,WAAaL,OCgC7B,EArCkB,WAChB,OACEM,EAAAA,EAAAA,KADMC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAAUC,EAA7B,EAA6BA,QAASC,EAAtC,EAAsCA,MAEhCC,EAFN,EAA6CC,YAI7C,OACE,oBACEP,UAAU,sDACVQ,GAAG,QAFL,UAIE,iBAAKR,UAAU,QAAf,WACE,gBAAIA,UAAU,OAAd,UACGE,GACD,iBAAMF,UAAU,eAAhB,SAAgCG,QAElC,iBAAKH,UAAU,kBAAf,UACMI,EADN,OAEE,SAAC,IAAD,CAAcN,KAAI,UAAYO,EAA9B,SAAwCA,QAE1C,cAAGL,UAAU,YAAb,gaAQA,gBAAKA,UAAU,eAAf,SACGM,EAAgBG,KAAI,gBAAGd,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAMC,EAAf,EAAeA,IAAf,OACnB,SAAC,EAAD,CAAuBF,KAAMA,EAAMC,KAAMA,EAAMC,IAAKA,GAAnCD,cCR7B,EAlBsC,SAAC,GAAD,IACpCc,EADoC,EACpCA,UACAC,EAFoC,EAEpCA,OACAC,EAHoC,EAGpCA,MACAC,EAJoC,EAIpCA,SAJoC,OAMpC,iBAAKb,UAAU,0EAAf,WACE,iBAAKA,UAAU,iBAAf,WACE,eAAIA,UAAU,OAAd,SAAsBU,KACtB,gBAAKV,UAAU,kBAAf,SAAkCW,KAClC,yBAAMC,QAER,gBAAKZ,UAAU,4BAAf,UACE,iBAAMA,UAAU,eAAhB,SAAgCa,UCStC,EAxBsB,WACpB,IAAQC,GAAcb,EAAAA,EAAAA,KAAda,UAER,OACE,oBACEd,UAAU,sDACVQ,GAAG,YAFL,UAIE,iBAAKR,UAAU,QAAf,WACE,eAAIA,UAAU,OAAd,uBACCc,EAAUL,KAAI,gBAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,OAAQC,EAAtB,EAAsBA,MAAOC,EAA7B,EAA6BA,SAA7B,OACb,SAACE,EAAD,CACEL,UAAWA,EACXC,OAAQA,EACRC,MAAOA,EACPC,SAAUA,GACLH,YCiBjB,EAhBoC,SAAC,GAAc,IACjD,EAlBmB,SAACd,GACpB,IAAMoB,GAAqBC,EAAAA,EAAAA,UAAgB,4BAAiBrB,IAAQ,IACpE,GAAyCsB,EAAAA,EAAAA,UAAiBF,GAAnDG,EAAP,KAAyBC,EAAzB,KAYA,MAAO,CAACD,GAXgBE,EAAAA,EAAAA,cAAY,SAACC,GACnC,YADgE,IAA7BA,IAAAA,GAAmB,GAG3CF,GADJ,IADCE,EAEmBN,EAAJ,WAICA,KAEvB,KAMyCO,CADI,EAAX3B,MAC9BuB,EAAP,KAAyBK,EAAzB,KAIA,OACE,eAAIxB,UAAU,mBAAd,UACE,cACEA,UAAWmB,EACXM,aAPe,kBAAMD,GAAgB,IAQrCE,aAPe,kBAAMF,GAAgB,SCoB7C,EAnCgD,SAAC,GAAD,IAC9CG,EAD8C,EAC9CA,MACAC,EAF8C,EAE9CA,YACAC,EAH8C,EAG9CA,YACAhB,EAJ8C,EAI9CA,SACAiB,EAL8C,EAK9CA,UACAC,EAN8C,EAM9CA,aAN8C,OAQ9C,iBAAK/B,UAAU,0EAAf,WACE,iBAAKA,UAAU,iBAAf,WACE,eAAIA,UAAU,OAAd,SAAsB2B,KACtB,gBAAK3B,UAAU,kBAAf,SAAkC4B,KAClC,wBACGC,EAAYpB,KAAI,SAACuB,GAAD,OACf,wBAAgBA,GAAPA,SAGb,oDACA,wBACGD,EAAatB,KAAI,SAACwB,GAAD,OAChB,wBAAgBA,GAAPA,SAGb,eAAIjC,UAAU,wBAAd,SACG8B,EAAUrB,KAAI,SAACd,GAAD,OACb,SAAC,EAAD,CAAUC,KAAMD,GAAWA,YAIjC,gBAAKK,UAAU,4BAAf,UACE,iBAAMA,UAAU,eAAhB,SAAgCa,UCAtC,EAnCwB,WACtB,IAAQqB,GAAejC,EAAAA,EAAAA,KAAfiC,WAER,OACE,oBACElC,UAAU,0DACVQ,GAAG,aAFL,UAIE,iBAAKR,UAAU,QAAf,WACE,eAAIA,UAAU,OAAd,wBACCkC,EAAWzB,KACV,gBACEkB,EADF,EACEA,MACAC,EAFF,EAEEA,YACAC,EAHF,EAGEA,YACAhB,EAJF,EAIEA,SACAiB,EALF,EAKEA,UACAC,EANF,EAMEA,aANF,OAQE,SAAC,EAAD,CAEEJ,MAAOA,EACPC,YAAaA,EACbC,YAAaA,EACbhB,SAAUA,EACViB,UAAWA,EACXC,aAAcA,GANTH,YClBbO,EAA4B,SAAC,GAAiC,IAA/BR,EAA8B,EAA9BA,MAAOE,EAAuB,EAAvBA,YAAahC,EAAU,EAAVA,IACjDuC,EAAYvC,GAChB,SAAC,IAAD,CAAcC,KAAMD,EAApB,UACE,4BAAY8B,EAAZ,SAGF,4BAAYA,EAAZ,MAGF,OACE,2BACE,cAAG3B,UAAU,oCACb,yBACGoC,EADH,IAEOP,SAMbM,EAAQE,aAAe,CACrBxC,IAAK,IAGP,QCDA,EAzB2B,WACzB,IAAQyC,GAAarC,EAAAA,EAAAA,KAAbqC,SAER,OACE,oBACEtC,UAAU,sDACVQ,GAAG,WAFL,UAIE,iBAAKR,UAAU,QAAf,WACE,eAAIA,UAAU,OAAd,uBACA,eAAIA,UAAU,aAAd,SACGsC,EAAS7B,KAAI,gBAAGkB,EAAH,EAAGA,MAAOE,EAAV,EAAUA,YAAahC,EAAvB,EAAuBA,IAAvB,OACZ,SAAC,EAAD,CAEE8B,MAAOA,EACPE,YAAaA,EACbhC,IAAKA,GAHA8B,cCFnB,EAX8B,SAAC,GAAD,IAAGA,EAAH,EAAGA,MAAOE,EAAV,EAAUA,YAAV,OAC5B,iCACE,gBAAK7B,UAAU,kBAAf,SAAkC2B,KAClC,wBACGE,EAAYpB,KAAI,SAACuB,GAAD,OACf,wBAAgBA,GAAPA,YCiBjB,EAxByB,WACvB,OAA8B/B,EAAAA,EAAAA,KAAtBsC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UAEhB,OACE,oBACExC,UAAU,sDACVQ,GAAG,SAFL,UAIE,iBAAKR,UAAU,QAAf,WACE,eAAIA,UAAU,OAAd,oCAECuC,EAAO9B,KAAI,gBAAGkB,EAAH,EAAGA,MAAOE,EAAV,EAAUA,YAAV,OACV,SAAC,EAAD,CAAOF,MAAOA,EAAOE,YAAaA,GAAkBF,OAEtD,eAAI3B,UAAU,wBAAd,SACGwC,EAAU/B,KAAI,SAACgC,GAAD,OACb,SAAC,EAAD,CAAU7C,KAAM6C,GAAeA,cCkB3C,EAvBsB,WACpB,IAQMC,EARW,CACf,CAAElC,GAAI,QAASmC,SAAS,SAAC,EAAD,KACxB,CAAEnC,GAAI,aAAcmC,SAAS,SAAC,EAAD,KAC7B,CAAEnC,GAAI,YAAamC,SAAS,SAAC,EAAD,KAC5B,CAAEnC,GAAI,SAAUmC,SAAS,SAAC,EAAD,KACzB,CAAEnC,GAAI,WAAYmC,SAAS,SAAC,EAAD,MAGHlC,KAAI,gBAAGD,EAAH,EAAGA,GAAImC,EAAP,EAAOA,QAAP,OAC5B,UAAC,EAAAC,SAAD,WACGD,GACD,eAAI3C,UAAU,UAFDQ,MAMjB,OACE,SAAC,KAAD,CAAQmB,MAAM,SAASE,YAAY,mBAAnC,SACGa","sources":["webpack://@samhwang/gatsby-resume/./src/components/Icons/SocialIcon.tsx","webpack://@samhwang/gatsby-resume/./src/components/Homepage/About/index.tsx","webpack://@samhwang/gatsby-resume/./src/components/Homepage/Education/School.tsx","webpack://@samhwang/gatsby-resume/./src/components/Homepage/Education/index.tsx","webpack://@samhwang/gatsby-resume/./src/components/Icons/LangIcon.tsx","webpack://@samhwang/gatsby-resume/./src/components/Homepage/Experiences/JobDescription.tsx","webpack://@samhwang/gatsby-resume/./src/components/Homepage/Experiences/index.tsx","webpack://@samhwang/gatsby-resume/./src/components/Homepage/ProjectSection/Project.tsx","webpack://@samhwang/gatsby-resume/./src/components/Homepage/ProjectSection/index.tsx","webpack://@samhwang/gatsby-resume/./src/components/Homepage/SkillSection/Skill.tsx","webpack://@samhwang/gatsby-resume/./src/components/Homepage/SkillSection/index.tsx","webpack://@samhwang/gatsby-resume/./src/pages/index.tsx"],"sourcesContent":["import type { FC } from 'react';\nimport { OutboundLink } from 'gatsby-plugin-google-gtag';\n\nexport interface SocialLinkProps {\n  icon: string;\n  name: string;\n  url: string;\n}\n\nconst SocialIcon: FC<SocialLinkProps> = ({ icon, name, url }) => (\n  <OutboundLink href={url} alt={`${name} link`}>\n    <i className={`devicon-${icon}`} />\n  </OutboundLink>\n);\n\nexport default SocialIcon;\n","import type { FC } from 'react';\nimport { OutboundLink } from 'gatsby-plugin-google-gtag';\nimport { usePersonalInformationData } from '../../../hooks';\nimport SocialIcon from '../../Icons/SocialIcon';\nimport type { SocialLinkProps } from '../../Icons/SocialIcon';\n\nconst About: FC = () => {\n  const { firstName, lastName, address, email, socialLinks } =\n    usePersonalInformationData();\n  const socialLinksData: SocialLinkProps[] = socialLinks;\n\n  return (\n    <section\n      className=\"resume-section p-3 p-lg-5 d-flex align-items-center\"\n      id=\"about\"\n    >\n      <div className=\"w-100\">\n        <h1 className=\"mb-0\">\n          {firstName}\n          <span className=\"text-primary\">{lastName}</span>\n        </h1>\n        <div className=\"subheading mb-5\">\n          {`${address} - `}\n          <OutboundLink href={`mailto:${email}`}>{email}</OutboundLink>\n        </div>\n        <p className=\"lead mb-5\">\n          I have always been passionate about computers, and how technology can\n          bring the world closer. That was the reason why I walked down the path\n          of Software Development. Besides my studies, I have worked in a lot of\n          Agile teams of up to 10 people, delivering high quality responsive web\n          applications on different platforms (PHP, NodeJS) for clients in\n          different industries (retail, sports, and education.)\n        </p>\n        <div className=\"social-icons\">\n          {socialLinksData.map(({ icon, name, url }) => (\n            <SocialIcon key={name} icon={icon} name={name} url={url} />\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default About;\n","import type { FC } from 'react';\n\nexport interface EducationProps {\n  institute: string;\n  degree: string;\n  major: string;\n  duration: string;\n}\n\nconst Education: FC<EducationProps> = ({\n  institute,\n  degree,\n  major,\n  duration,\n}) => (\n  <div className=\"resume-item d-flex flex-column flex-md-row justify-content-between mb-5\">\n    <div className=\"resume-content\">\n      <h3 className=\"mb-0\">{institute}</h3>\n      <div className=\"subheading mb-3\">{degree}</div>\n      <div>{major}</div>\n    </div>\n    <div className=\"resume-date text-md-right\">\n      <span className=\"text-primary\">{duration}</span>\n    </div>\n  </div>\n);\n\nexport default Education;\n","import type { FC } from 'react';\nimport { usePersonalInformationData } from '../../../hooks';\nimport School from './School';\nimport type { EducationProps } from './School';\n\nexport type EducationMetadata = EducationProps[];\n\nconst Education: FC = () => {\n  const { education } = usePersonalInformationData();\n\n  return (\n    <section\n      className=\"resume-section p-3 p-lg-5 d-flex align-items-center\"\n      id=\"education\"\n    >\n      <div className=\"w-100\">\n        <h2 className=\"mb-5\">Education</h2>\n        {education.map(({ institute, degree, major, duration }) => (\n          <School\n            institute={institute}\n            degree={degree}\n            major={major}\n            duration={duration}\n            key={institute}\n          />\n        ))}\n      </div>\n    </section>\n  );\n};\n\nexport default Education;\n","import type { FC } from 'react';\nimport { useMemo, useCallback, useState } from 'react';\n\ninterface LangIconProps {\n  name: string;\n}\n\nconst useIconClass = (name: string) => {\n  const DEFAULT_ICON_CLASS = useMemo<string>(() => `devicon-${name}`, []);\n  const [currentIconClass, setIconClass] = useState<string>(DEFAULT_ICON_CLASS);\n  const toggleColorIcon = useCallback((isHover: boolean = false) => {\n    switch (isHover) {\n      case true:\n        return setIconClass(`${DEFAULT_ICON_CLASS} colored`);\n\n      case false:\n      default:\n        return setIconClass(DEFAULT_ICON_CLASS);\n    }\n  }, []);\n\n  return [currentIconClass, toggleColorIcon] as const;\n};\n\nconst LangIcon: FC<LangIconProps> = ({ name }) => {\n  const [currentIconClass, toggleColorIcon] = useIconClass(name);\n  const onMouseEnter = () => toggleColorIcon(true);\n  const onMouseLeave = () => toggleColorIcon(false);\n\n  return (\n    <li className=\"list-inline-item\">\n      <i\n        className={currentIconClass}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n      />\n    </li>\n  );\n};\n\nexport default LangIcon;\n","import type { FC } from 'react';\nimport LangIcon from '../../Icons/LangIcon';\n\nexport interface JobDescriptionProps {\n  title: string;\n  companyName: string;\n  description: string[];\n  duration: string;\n  techIcons: string[];\n  technologies: string[];\n}\n\nconst JobDescription: FC<JobDescriptionProps> = ({\n  title,\n  companyName,\n  description,\n  duration,\n  techIcons,\n  technologies,\n}) => (\n  <div className=\"resume-item d-flex flex-column flex-md-row justify-content-between mb-5\">\n    <div className=\"resume-content\">\n      <h3 className=\"mb-0\">{title}</h3>\n      <div className=\"subheading mb-3\">{companyName}</div>\n      <ul>\n        {description.map((line) => (\n          <li key={line}>{line}</li>\n        ))}\n      </ul>\n      <h4>Technologies involved:</h4>\n      <ul>\n        {technologies.map((tech) => (\n          <li key={tech}>{tech}</li>\n        ))}\n      </ul>\n      <ul className=\"list-inline dev-icons\">\n        {techIcons.map((icon) => (\n          <LangIcon name={icon} key={icon} />\n        ))}\n      </ul>\n    </div>\n    <div className=\"resume-date text-md-right\">\n      <span className=\"text-primary\">{duration}</span>\n    </div>\n  </div>\n);\n\nexport default JobDescription;\n","import type { FC } from 'react';\nimport { usePersonalInformationData } from '../../../hooks';\nimport type { JobDescriptionProps } from './JobDescription';\nimport JobDescription from './JobDescription';\n\nexport type ExperienceSection = JobDescriptionProps[];\n\nconst Experiences: FC = () => {\n  const { experience } = usePersonalInformationData();\n\n  return (\n    <section\n      className=\"resume-section p-3 p-lg-5 d-flex justify-content-center\"\n      id=\"experience\"\n    >\n      <div className=\"w-100\">\n        <h2 className=\"mb-5\">Experience</h2>\n        {experience.map(\n          ({\n            title,\n            companyName,\n            description,\n            duration,\n            techIcons,\n            technologies,\n          }) => (\n            <JobDescription\n              key={companyName}\n              title={title}\n              companyName={companyName}\n              description={description}\n              duration={duration}\n              techIcons={techIcons}\n              technologies={technologies}\n            />\n          )\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default Experiences;\n","import type { FC } from 'react';\nimport { OutboundLink } from 'gatsby-plugin-google-gtag';\n\nexport interface ProjectProps {\n  title: string;\n  description: string;\n  url?: string;\n}\n\nconst Project: FC<ProjectProps> = ({ title, description, url }) => {\n  const titleText = url ? (\n    <OutboundLink href={url}>\n      <strong>{`${title}:`}</strong>\n    </OutboundLink>\n  ) : (\n    <strong>{`${title}:`}</strong>\n  );\n\n  return (\n    <li>\n      <i className=\"fa-li fa fa-tasks text-warning\" />\n      <p>\n        {titleText}\n        {` ${description}`}\n      </p>\n    </li>\n  );\n};\n\nProject.defaultProps = {\n  url: '',\n};\n\nexport default Project;\n","import type { FC } from 'react';\nimport { usePersonalInformationData } from '../../../hooks';\nimport Project from './Project';\nimport type { ProjectProps } from './Project';\n\nexport type ProjectsMetadata = ProjectProps[];\n\nconst ProjectSection: FC = () => {\n  const { projects } = usePersonalInformationData();\n\n  return (\n    <section\n      className=\"resume-section p-3 p-lg-5 d-flex align-items-center\"\n      id=\"projects\"\n    >\n      <div className=\"w-100\">\n        <h2 className=\"mb-5\">Projects</h2>\n        <ul className=\"fa-ul mb-0\">\n          {projects.map(({ title, description, url }) => (\n            <Project\n              key={title}\n              title={title}\n              description={description}\n              url={url}\n            />\n          ))}\n        </ul>\n      </div>\n    </section>\n  );\n};\n\nexport default ProjectSection;\n","import type { FC } from 'react';\n\nexport interface SkillProps {\n  title: string;\n  description: string[];\n}\n\nconst Skill: FC<SkillProps> = ({ title, description }) => (\n  <>\n    <div className=\"subheading mb-3\">{title}</div>\n    <ul>\n      {description.map((line) => (\n        <li key={line}>{line}</li>\n      ))}\n    </ul>\n  </>\n);\n\nexport default Skill;\n","import type { FC } from 'react';\nimport { usePersonalInformationData } from '../../../hooks';\nimport Skill from './Skill';\nimport LangIcon from '../../Icons/LangIcon';\n\nconst SkillSection: FC = () => {\n  const { skills, techStack } = usePersonalInformationData();\n\n  return (\n    <section\n      className=\"resume-section p-3 p-lg-5 d-flex align-items-center\"\n      id=\"skills\"\n    >\n      <div className=\"w-100\">\n        <h2 className=\"mb-5\">Skills and Proficiency</h2>\n\n        {skills.map(({ title, description }) => (\n          <Skill title={title} description={description} key={title} />\n        ))}\n        <ul className=\"list-inline dev-icons\">\n          {techStack.map((language) => (\n            <LangIcon name={language} key={language} />\n          ))}\n        </ul>\n      </div>\n    </section>\n  );\n};\n\nexport default SkillSection;\n","import { Fragment } from 'react';\nimport type { FC, ReactNode } from 'react';\nimport { Layout } from '../components/Template';\nimport {\n  About,\n  Education,\n  Experiences,\n  ProjectSection,\n  SkillSection,\n} from '../components/Homepage';\n\nexport interface SectionType {\n  id: string;\n  content: ReactNode | Element;\n}\n\nconst IndexPage: FC = () => {\n  const sections = [\n    { id: 'about', content: <About /> },\n    { id: 'experience', content: <Experiences /> },\n    { id: 'education', content: <Education /> },\n    { id: 'skills', content: <SkillSection /> },\n    { id: 'projects', content: <ProjectSection /> },\n  ];\n\n  const children = sections.map(({ id, content }: SectionType) => (\n    <Fragment key={id}>\n      {content}\n      <hr className=\"m-0\" />\n    </Fragment>\n  ));\n\n  return (\n    <Layout title=\"Resume\" description=\"Sam Huynh resume\">\n      {children}\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n"],"names":["icon","name","url","href","alt","className","usePersonalInformationData","firstName","lastName","address","email","socialLinksData","socialLinks","id","map","institute","degree","major","duration","education","School","DEFAULT_ICON_CLASS","useMemo","useState","currentIconClass","setIconClass","useCallback","isHover","useIconClass","toggleColorIcon","onMouseEnter","onMouseLeave","title","companyName","description","techIcons","technologies","line","tech","experience","Project","titleText","defaultProps","projects","skills","techStack","language","children","content","Fragment"],"sourceRoot":""}