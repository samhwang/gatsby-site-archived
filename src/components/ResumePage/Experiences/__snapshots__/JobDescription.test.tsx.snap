// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Job Description Component Should render without crashing and match snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="resume-item d-flex flex-column flex-md-row justify-content-between mb-5"
      >
        <div
          class="resume-content"
        >
          <h3
            class="mb-0"
          >
            Junior Full Stack Developer
          </h3>
          <div
            class="subheading mb-3"
          >
            Hertz Australia
          </div>
          <ul>
            <li>
              Built the Github Actions and GitHub packages pipeline to publish the Flexicar website docker images, along with setting up APIs to access GitHub packages for cleaning up when necessary
            </li>
            <li>
              Built new core features into Hertz's internal rental analytics and tracking systems, using ExpressJS, EJS and NodeJS
            </li>
            <li>
              Built the new frontend for Hertz's shuttle bus tracking system, now currently used by the Ace brand, using ReactJS and deployed in an S3 bucket endpoint, communicating via serverless websockets
            </li>
          </ul>
          <h4>
            Technologies involved:
          </h4>
          <ul>
            <li>
              PHP 7.4 and Wordpress
            </li>
            <li>
              HTML5, CSS3 and CSS pre-processors like SASS and LESS
            </li>
            <li>
              GraphQL and REST API
            </li>
            <li>
              JavaScript (jQuery, NodeJS, ReactJS and ExpressJS)
            </li>
            <li>
              Docker containers & docker-compose
            </li>
            <li>
              Database: MySQL & MongoDB
            </li>
            <li>
              Serverless architecture and websockets
            </li>
            <li>
              AWS Lambda and Elastic Beanstalk
            </li>
            <li>
              CI/CD: GitHub Actions pipeline and GitHub Packages
            </li>
            <li>
              Project management using JIRA and Confluence
            </li>
          </ul>
          <ul
            class="list-inline dev-icons"
          >
            <li
              class="list-inline-item"
            />
            <li
              class="list-inline-item"
            />
            <li
              class="list-inline-item"
            />
            <li
              class="list-inline-item"
            />
            <li
              class="list-inline-item"
            />
            <li
              class="list-inline-item"
            />
            <li
              class="list-inline-item"
            />
            <li
              class="list-inline-item"
            />
            <li
              class="list-inline-item"
            />
            <li
              class="list-inline-item"
            />
            <li
              class="list-inline-item"
            />
            <li
              class="list-inline-item"
            />
            <li
              class="list-inline-item"
            />
            <li
              class="list-inline-item"
            />
            <li
              class="list-inline-item"
            />
          </ul>
        </div>
        <div
          class="resume-date text-md-right"
        >
          <span
            class="text-primary"
          >
            Oct 2019 - Present
          </span>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="resume-item d-flex flex-column flex-md-row justify-content-between mb-5"
    >
      <div
        class="resume-content"
      >
        <h3
          class="mb-0"
        >
          Junior Full Stack Developer
        </h3>
        <div
          class="subheading mb-3"
        >
          Hertz Australia
        </div>
        <ul>
          <li>
            Built the Github Actions and GitHub packages pipeline to publish the Flexicar website docker images, along with setting up APIs to access GitHub packages for cleaning up when necessary
          </li>
          <li>
            Built new core features into Hertz's internal rental analytics and tracking systems, using ExpressJS, EJS and NodeJS
          </li>
          <li>
            Built the new frontend for Hertz's shuttle bus tracking system, now currently used by the Ace brand, using ReactJS and deployed in an S3 bucket endpoint, communicating via serverless websockets
          </li>
        </ul>
        <h4>
          Technologies involved:
        </h4>
        <ul>
          <li>
            PHP 7.4 and Wordpress
          </li>
          <li>
            HTML5, CSS3 and CSS pre-processors like SASS and LESS
          </li>
          <li>
            GraphQL and REST API
          </li>
          <li>
            JavaScript (jQuery, NodeJS, ReactJS and ExpressJS)
          </li>
          <li>
            Docker containers & docker-compose
          </li>
          <li>
            Database: MySQL & MongoDB
          </li>
          <li>
            Serverless architecture and websockets
          </li>
          <li>
            AWS Lambda and Elastic Beanstalk
          </li>
          <li>
            CI/CD: GitHub Actions pipeline and GitHub Packages
          </li>
          <li>
            Project management using JIRA and Confluence
          </li>
        </ul>
        <ul
          class="list-inline dev-icons"
        >
          <li
            class="list-inline-item"
          />
          <li
            class="list-inline-item"
          />
          <li
            class="list-inline-item"
          />
          <li
            class="list-inline-item"
          />
          <li
            class="list-inline-item"
          />
          <li
            class="list-inline-item"
          />
          <li
            class="list-inline-item"
          />
          <li
            class="list-inline-item"
          />
          <li
            class="list-inline-item"
          />
          <li
            class="list-inline-item"
          />
          <li
            class="list-inline-item"
          />
          <li
            class="list-inline-item"
          />
          <li
            class="list-inline-item"
          />
          <li
            class="list-inline-item"
          />
          <li
            class="list-inline-item"
          />
        </ul>
      </div>
      <div
        class="resume-date text-md-right"
      >
        <span
          class="text-primary"
        >
          Oct 2019 - Present
        </span>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
